# ==========================================
# CLASES PRINCIPALES
# ==========================================

class Cliente:
    def __init__(self, id_cliente, nombre):
        self.id_cliente = id_cliente
        self.nombre = nombre
        self.historial = []

    def agregar_evento_historial(self, evento):
        self.historial.append(evento)

    def mostrar_historial(self):
        if not self.historial:
            print(f"No hay historial para {self.nombre}.")
        else:
            print(f"\n--- Historial de {self.nombre} ---")
            for i, evento in enumerate(self.historial, 1):
                print(f"{i}. {evento}")

    def __str__(self):
        return f"{self.nombre} (CI: {self.id_cliente})"


# =========================================================
#  Clase Pago
# =========================================================
class Pago:
    def __init__(self, reserva, monto, metodo_pago):
        self.reserva = reserva
        self.monto = monto
        self.metodo_pago = metodo_pago
        self.estado = "Pendiente"

    def procesar_pago(self):
        saldo = self.reserva.saldo_pendiente()
        if self.monto == saldo:
            self.reserva.registrar_pago(self.monto)
            self.estado = "Pagado"
            print(" Pago completado correctamente.")
        elif self.monto > saldo:
            cambio = self.monto - saldo
            self.reserva.registrar_pago(saldo)
            self.estado = "Pagado"
            print(f" Pago completado. Se devolverÃ¡n ${int(cambio) if cambio.is_integer() else cambio} de cambio.")
        else:
            self.reserva.registrar_pago(self.monto)
            restante = self.reserva.saldo_pendiente()
            print(f" Pago incompleto. Faltan ${int(restante) if restante.is_integer() else restante} para completar el pago.")

        return self.estado
