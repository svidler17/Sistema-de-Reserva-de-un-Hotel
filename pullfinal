# =========================================================
# Clase Cliente
# =========================================================
class Cliente:
    def __init__(self, id_cliente, nombre):
        self.id_cliente = id_cliente
        self.nombre = nombre
        self.historial = []  # Lista de eventos del cliente

    def agregar_evento_historial(self, evento):
        self.historial.append(evento)

    def mostrar_historial(self):
        if not self.historial:
            print(f"No hay historial para {self.nombre}.")
        else:
            print(f"\n--- Historial de {self.nombre} ---")
            for i, evento in enumerate(self.historial, 1):
                print(f"{i}. {evento}")

    def __str__(self):
        return f"{self.nombre} (CI: {self.id_cliente})"


# =========================================================
#  Clase Habitación
# =========================================================
class Habitacion:
    def __init__(self, numero, tipo, tarifa):
        self.numero = numero
        self.tipo = tipo
        self.tarifa = tarifa
        self.estado = "Disponible"
        self.dias_estadia = 0
        self.metodo_pago = None
        self.total = 0

    def calcular_total(self):
        if self.dias_estadia <= 0:
            self.dias_estadia = 1
        self.total = self.dias_estadia * self.tarifa
        return self.total

    def cambiar_estado(self, nuevo_estado):
        if nuevo_estado not in ["Disponible", "Ocupada", "Mantenimiento"]:
            print("Estado no válido.")
        else:
            self.estado = nuevo_estado
            print(f"Estado actualizado a: {self.estado}")

    def __str__(self):
        return (f"Habitación {self.numero} ({self.tipo}) - {self.estado} | "
                f"Días: {self.dias_estadia} | Total: ${self.total}")


# =========================================================
#  Clase Hotel
# =========================================================
class Hotel:
    def __init__(self, nombre):
        self.nombre = nombre
        self.habitaciones = []

    def agregar_habitacion(self, habitacion):
        if any(h.numero == habitacion.numero for h in self.habitaciones):
            print("Ya existe una habitación con ese número.")
            return
        self.habitaciones.append(habitacion)
        print(f"Habitación registrada: {habitacion}")

    def mostrar_habitaciones(self):
        if not self.habitaciones:
            print("\nNo hay habitaciones registradas.")
            return
        print(f"\n--- Habitaciones del Hotel {self.nombre} ---")
        for hab in self.habitaciones:
            print(hab)


# =========================================================
#  Clase Reserva
# =========================================================
class Reserva:
    def __init__(self, id_reserva, cliente, habitacion, dias_estadia):
        self.id_reserva = id_reserva
        self.cliente = cliente
        self.habitacion = habitacion
        self.dias_estadia = dias_estadia
        self.estado = "Activa"

    def modificar_reserva(self, nuevos_dias):
        if self.estado != "Activa":
            print("No se puede modificar una reserva que no está activa.")
            return
        self.dias_estadia = nuevos_dias
        print("Reserva modificada correctamente.")

    def cancelar_reserva(self):
        if self.estado == "Cancelada":
            print("La reserva ya estaba cancelada.")
        else:
            self.estado = "Cancelada"
            self.habitacion.cambiar_estado("Disponible")
            print("Reserva cancelada correctamente.")

    def __str__(self):
        return (f"Reserva {self.id_reserva}: {self.cliente.nombre} - "
                f"Habitación {self.habitacion.numero} ({self.dias_estadia} días) - Estado: {self.estado}")


# =========================================================
#  Clase Pago
# =========================================================
class Pago:
    def __init__(self, cliente, monto, metodo_pago):
        self.cliente = cliente
        self.monto = monto
        self.metodo_pago = metodo_pago
        self.estado = "Pendiente"

    def procesar_pago(self):
        if self.estado == "Pagado":
            print("El pago ya fue realizado.")
        else:
            self.estado = "Pagado"
            print(f"Pago procesado correctamente. Monto: ${self.monto} - Método: {self.metodo_pago}")

    def mostrar_informacion(self):
        print(f"Cliente: {self.cliente.nombre}")
        print(f"Monto: ${self.monto}")
        print(f"Método de pago: {self.metodo_pago}")
        print(f"Estado del pago: {self.estado}")


# =========================================================
#  Menú principal
# =========================================================
def menu():
    print("=========================================")
    print("Bienvenido al Sistema Hotelero La Velaria")
    print("=========================================")

    hotel = Hotel("Hotel La Velaria") 
    
    cliente1 = Cliente("30351393", "Jethzibel Rodriguez")
    cliente1.agregar_evento_historial("Cliente registrado en el sistema.")
    cliente1.agregar_evento_historial("Reserva creada: Habitación 101 por 3 días.")
    cliente1.agregar_evento_historial("Pago procesado: $300.00 por método Tarjeta.")

    cliente2 = Cliente("3133421033", "Javier Barreto")
    cliente2.agregar_evento_historial("Cliente registrado en el sistema.")
    cliente2.agregar_evento_historial("Reserva creada: Habitación 102 por 2 días.")
    cliente2.agregar_evento_historial("Pago procesado: $200.00 por método Efectivo.")
    
    cliente3 = Cliente("3212591279", "Charly Torres")
    cliente3.agregar_evento_historial("Cliente registrado en el sistema.")
    cliente3.agregar_evento_historial("Reserva creada: Habitación 103 por 2 días.")
    cliente3.agregar_evento_historial("Pago procesado: $200.00 por método Efectivo.")
    
    cliente4 = Cliente("3144758838", "Mateo Rivera")
    cliente4.agregar_evento_historial("Cliente registrado en el sistema.")
    cliente4.agregar_evento_historial("Reserva creada: Habitación 104 por 2 días.")
    cliente4.agregar_evento_historial("Pago procesado: $200.00 por método Efectivo.")

    clientes = [cliente1, cliente2, cliente3, cliente4]
    reservas = []

    while True:
        print("\n=========================================")
        print(f" MENÚ PRINCIPAL HOTEL  ")
        print("=========================================")
        print("1. Registrar nueva habitación")
        print("2. Ver todas las habitaciones")
        print("3. Registrar un cliente")
        print("4. Crear una reserva")
        print("5. Cancelar una reserva")
        print("6. Procesar un pago")
        print("7. Salir del sistema")
        print("8. Ver historial de un cliente")
        print("9. Mostrar todos los clientes")

        opcion = input("\nSeleccione una opción (1-9): ")

        # 1. Registrar habitación
        if opcion == "1":
            print("\n--- REGISTRO DE HABITACIÓN ---")
            try:
                numero = int(input("Número de habitación: "))
                tipo = input("Tipo (Individual / Doble / Suite): ")
                tarifa = float(input("Tarifa por noche ($): "))
                habitacion = Habitacion(numero, tipo, tarifa)
                hotel.agregar_habitacion(habitacion)
                print(f"Habitación {numero} registrada correctamente.")
            except ValueError:
                print("Error: Por favor, ingrese datos válidos.")


        elif opcion == "2":
            print("\n--- LISTADO DE HABITACIONES ---")
            hotel.mostrar_habitaciones()


        elif opcion == "3":
            print("\n--- REGISTRO DE CLIENTE ---")
            id_cliente = input("Número de cédula del cliente: ")
            nombre = input("Nombre completo: ")
            cliente = Cliente(id_cliente, nombre)
            clientes.append(cliente)
            cliente.agregar_evento_historial("Cliente registrado en el sistema.")
            print(f"Cliente {nombre} registrado exitosamente.")


        elif opcion == "4":
            print("\n--- CREAR RESERVA ---")
            if not clientes:
                print("No hay clientes registrados.")
                continue
            if not hotel.habitaciones:
                print("No hay habitaciones registradas.")
                continue

            id_reserva = input("ID de la reserva: ")
            id_cliente = input("Número de cédula del cliente: ")

            cliente = next((c for c in clientes if c.id_cliente == id_cliente), None)
            if not cliente:
                print("Cliente no encontrado.")
                continue

            hotel.mostrar_habitaciones()
            try:
                numero_habitacion = int(input("Número de habitación a reservar: "))
                habitacion = next((h for h in hotel.habitaciones if h.numero == numero_habitacion), None)
                if not habitacion:
                    print("Habitación no encontrada.")
                    continue
                if habitacion.estado != "Disponible":
                    print("La habitación no está disponible.")
                    continue

                dias_estadia = int(input("Cantidad de días de estancia: "))
                reserva = Reserva(id_reserva, cliente, habitacion, dias_estadia)
                reservas.append(reserva)
                habitacion.dias_estadia = dias_estadia
                habitacion.cambiar_estado("Ocupada")
                cliente.agregar_evento_historial(f"Reserva creada: Habitación {habitacion.numero} por {dias_estadia} días.")
                print(f"Reserva creada exitosamente para {cliente.nombre}.")
            except ValueError:
                print("Ingrese un número válido de días.")


        elif opcion == "5":
            print("\n--- CANCELAR RESERVA ---")
            id_reserva = input("Ingrese el ID de la reserva a cancelar: ")
            reserva = next((r for r in reservas if r.id_reserva == id_reserva), None)
            if not reserva:
                print("No se encontró ninguna reserva con ese ID.")
            else:
                reserva.cancelar_reserva()
                reserva.cliente.agregar_evento_historial(f"Reserva {reserva.id_reserva} cancelada.")
                print("Reserva cancelada correctamente.")


        elif opcion == "6":
            print("\n--- PROCESAR PAGO ---")
            id_cliente = input("Ingrese el número de cédula del cliente: ")
            cliente = next((c for c in clientes if c.id_cliente == id_cliente), None)
            if not cliente:
                print("Cliente no encontrado.")
                continue

            try:
                numero_habitacion = int(input("Número de habitación: "))
                habitacion = next((h for h in hotel.habitaciones if h.numero == numero_habitacion), None)
                if not habitacion:
                    print("Habitación no encontrada.")
                    continue

                total_a_pagar = habitacion.calcular_total()
                print(f"Total a pagar: ${total_a_pagar:.2f}")
                metodo_pago = input("Método de pago (Tarjeta / Efectivo): ").capitalize()
                pago = Pago(cliente, total_a_pagar, metodo_pago)
                pago.procesar_pago()
                cliente.agregar_evento_historial(f"Pago procesado: ${total_a_pagar:.2f} por método {metodo_pago}.")
            except ValueError:
                print("Número de habitación inválido.")


        elif opcion == "7":
            print(f"\nGracias por usar el sistema del {hotel.nombre}. Hasta pronto.")
            break


        elif opcion == "8":
            print("\n--- HISTORIAL DE CLIENTE ---")
            id_cliente = input("Ingrese el número de cédula del cliente: ")
            cliente = next((c for c in clientes if c.id_cliente == id_cliente), None)
            if not cliente:
                print("Cliente no encontrado.")
            else:
                cliente.mostrar_historial()


        elif opcion == "9":
            print("\n--- LISTADO DE CLIENTES ---")
            if not clientes:
                print("No hay clientes registrados.")
            else:
                for c in clientes:
                    print(c)

        else:
            print("Opción inválida. Intente de nuevo.")


# =========================================================
# Ejecutar
# =========================================================
if __name__ == "__main__":
    menu()
