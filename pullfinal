# =========================================================
# git remote add origin Clase Cliente
# =========================================================
class Cliente:
    def __init__(self, id_cliente, nombre):
        self.id_cliente = id_cliente
        self.nombre = nombre

    def __str__(self):
        return f"{self.nombre} (ID: {self.id_cliente})"


# =========================================================
#  Clase Habitación
# =========================================================
class Habitacion:
    def __init__(self, numero, tipo, tarifa):
        self.numero = numero
        self.tipo = tipo
        self.tarifa = tarifa
        self.estado = "Disponible"
        self.dias_estadia = 0
        self.metodo_pago = None
        self.total = 0

    def calcular_total(self):
        """Calcula el total con base en los días de estancia"""
        if self.dias_estadia <= 0:
            self.dias_estadia = 1
        self.total = self.dias_estadia * self.tarifa
        return self.total

    def cambiar_estado(self, nuevo_estado):
        """Cambia el estado de la habitación"""
        if nuevo_estado not in ["Disponible", "Ocupada", "Mantenimiento"]:
            print("Estado no válido.")
        else:
            self.estado = nuevo_estado
            print(f"Estado actualizado a: {self.estado}")

    def __str__(self):
        return (f"Habitación {self.numero} ({self.tipo}) - {self.estado} | "
                f"Días: {self.dias_estadia} | Total: ${self.total}")


# =========================================================
#  Clase Hotel
# =========================================================
class Hotel:
    def __init__(self, nombre):
        self.nombre = nombre
        self.habitaciones = []

    def agregar_habitacion(self, habitacion):
        if any(h.numero == habitacion.numero for h in self.habitaciones):
            print("Ya existe una habitación con ese número.")
            return
        self.habitaciones.append(habitacion)
        print(f"Habitación registrada: {habitacion}")

    def mostrar_habitaciones(self):
        if not self.habitaciones:
            print("\nNo hay habitaciones registradas.")
            return
        print(f"\n--- Habitaciones del Hotel {self.nombre} ---")
        for hab in self.habitaciones:
            print(hab)


# =========================================================
#  Clase Reserva
# =========================================================
class Reserva:
    def __init__(self, id_reserva, cliente, habitacion, dias_estadia):
        self.id_reserva = id_reserva
        self.cliente = cliente
        self.habitacion = habitacion
        self.dias_estadia = dias_estadia
        self.estado = "Activa"

    def modificar_reserva(self, nuevos_dias):
        if self.estado != "Activa":
            print("No se puede modificar una reserva que no está activa.")
            return
        self.dias_estadia = nuevos_dias
        print("Reserva modificada correctamente.")

    def cancelar_reserva(self):
        if self.estado == "Cancelada":
            print("La reserva ya estaba cancelada.")
        else:
            self.estado = "Cancelada"
            self.habitacion.cambiar_estado("Disponible")
            print("Reserva cancelada correctamente.")

    def __str__(self):
        return (f"Reserva {self.id_reserva}: {self.cliente.nombre} - "
                f"Habitación {self.habitacion.numero} ({self.dias_estadia} días) - Estado: {self.estado}")


# =========================================================
#  Clase Pago
# =========================================================
class Pago:
    def __init__(self, cliente, monto, metodo_pago):
        self.cliente = cliente
        self.monto = monto
        self.metodo_pago = metodo_pago
        self.estado = "Pendiente"

    def procesar_pago(self):
        if self.estado == "Pagado":
            print("El pago ya fue realizado.")
        else:
            self.estado = "Pagado"
            print(f"Pago procesado correctamente. Monto: ${self.monto} - Método: {self.metodo_pago}")

    def mostrar_informacion(self):
        print(f"Cliente: {self.cliente.nombre}")
        print(f"Monto: ${self.monto}")
        print(f"Método de pago: {self.metodo_pago}")
        print(f"Estado del pago: {self.estado}")


def menu():
    print("=========================================")
    print("    Bienvenido al Sistema Hotelero")
    print("=========================================")

    
    nombre_hotel = input("Ingrese el nombre del hotel: ")
    hotel = Hotel(nombre_hotel)

    clientes = []
    reservas = []

    while True:
        print("\n=========================================")
        print(f" MENÚ PRINCIPAL HOTEL  ")
        print("=========================================")
        print("1. Registrar nueva habitación")
        print("2. Ver todas las habitaciones")
        print("3. Registrar un cliente")
        print("4. Crear una reserva")
        print("5. Cancelar una reserva")
        print("6. Procesar un pago")
        print("7. Salir del sistema")

        opcion = input("\nSeleccione una opción (1-7): ")

        # -------------------------------------------------
        # 1. Registrar nueva habitación
        # -------------------------------------------------
        if opcion == "1":
            print("\n--- REGISTRO DE HABITACIÓN ---")
            try:
                numero = int(input("Número de habitación: "))
                tipo = input("Tipo (Individual / Doble / Suite): ")
                tarifa = float(input("Tarifa por noche ($): "))
                habitacion = Habitacion(numero, tipo, tarifa)
                hotel.agregar_habitacion(habitacion)
                print(f"Habitación {numero} registrada correctamente.")
            except ValueError:
                print("Error: Por favor, ingrese datos válidos.")

        # -------------------------------------------------
        # 2. Ver todas las habitaciones
        # -------------------------------------------------
        elif opcion == "2":
            print("\n--- LISTADO DE HABITACIONES ---")
            hotel.mostrar_habitaciones()

        # -------------------------------------------------
        # 3. Registrar un cliente
        # -------------------------------------------------
        elif opcion == "3":
            print("\n--- REGISTRO DE CLIENTE ---")
            id_cliente = input("ID del cliente: ")
            nombre = input("Nombre completo: ")
            cliente = Cliente(id_cliente, nombre)
            clientes.append(cliente)
            print(f"Cliente {nombre} registrado exitosamente.")

        # -------------------------------------------------
        # 4. Crear una reserva
        # -------------------------------------------------
        elif opcion == "4":
            print("\n--- CREAR RESERVA ---")

            if not clientes:
                print("No hay clientes registrados.")
                continue
            if not hotel.habitaciones:
                print("No hay habitaciones registradas.")
                continue

            id_reserva = input("ID de la reserva: ")
            id_cliente = input("ID del cliente: ")

            cliente = next(
                (cliente_en_lista for cliente_en_lista in clientes if cliente_en_lista.id_cliente == id_cliente),
                None
            )

            if not cliente:
                print("Cliente no encontrado.")
                continue

            hotel.mostrar_habitaciones()
            numero_habitacion = int(input("Número de habitación a reservar: "))

            habitacion = next(
                (habitacion_en_lista for habitacion_en_lista in hotel.habitaciones if habitacion_en_lista.numero == numero_habitacion),
                None
            )

            if not habitacion:
                print("Habitación no encontrada.")
                continue
            if habitacion.estado != "Disponible":
                print("La habitación seleccionada no está disponible.")
                continue

            try:
                dias_estadia = int(input("Cantidad de días de estancia: "))
                reserva = Reserva(id_reserva, cliente, habitacion, dias_estadia)
                reservas.append(reserva)
                habitacion.dias_estadia = dias_estadia
                habitacion.cambiar_estado("Ocupada")
                print(f"Reserva creada exitosamente para {cliente.nombre}.")
            except ValueError:
                print("Ingrese un número válido de días.")

  
        # 5. Cancelar una reserva
      
        elif opcion == "5":
            print("\n--- CANCELAR RESERVA ---")
            id_reserva = input("Ingrese el ID de la reserva a cancelar: ")

            reserva = next(
                (reserva_en_lista for reserva_en_lista in reservas if reserva_en_lista.id_reserva == id_reserva),
                None
            )

            if not reserva:
                print("No se encontró ninguna reserva con ese ID.")
            else:
                reserva.cancelar_reserva()
                print("Reserva cancelada correctamente.")

        # -------------------------------------------------
        # 6. Procesar pago
        # -------------------------------------------------
        elif opcion == "6":
            print("\n--- PROCESAR PAGO ---")
            id_cliente = input("Ingrese el ID del cliente: ")

            cliente = next(
                (cliente_en_lista for cliente_en_lista in clientes if cliente_en_lista.id_cliente == id_cliente),
                None
            )

            if not cliente:
                print("Cliente no encontrado.")
                continue

            numero_habitacion = int(input("Número de habitación: "))

            habitacion = next(
                (habitacion_en_lista for habitacion_en_lista in hotel.habitaciones if habitacion_en_lista.numero == numero_habitacion),
                None
            )

            if not habitacion:
                print("Habitación no encontrada.")
                continue

            total_a_pagar = habitacion.calcular_total()
            print(f"Total a pagar: ${total_a_pagar:.2f}")

            metodo_pago = input("Método de pago (Tarjeta / Efectivo): ").capitalize()
            pago = Pago(cliente, total_a_pagar, metodo_pago)
            pago.procesar_pago()

       
        elif opcion == "7":
            print(f"\nGracias por usar el sistema del {hotel.nombre}. Hasta pronto.")
            break
        else:
            print("Opción inválida. Intente de nuevo.")

# Ejec
if __name__ == "__main__":
    menu()
